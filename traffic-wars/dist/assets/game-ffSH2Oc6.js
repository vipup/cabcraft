import{r as e}from"./vendor-BXk_ma1u.js";var t={exports:{}},i={},r=e,d=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,n=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,i){var r,s={},u=null,c=null;for(r in void 0!==i&&(u=""+i),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)a.call(t,r)&&!o.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:d,type:e,key:u,ref:c,props:s,_owner:n.current}}i.Fragment=s,i.jsx=u,i.jsxs=u,t.exports=i;var c=t.exports;const l={DEBUG:0,INFO:1,WARNING:2,ERROR:3},p={[l.DEBUG]:"DEBUG",[l.INFO]:"INFO",[l.WARNING]:"WARNING",[l.ERROR]:"ERROR"},f={[l.DEBUG]:"#95a5a6",[l.INFO]:"#3498db",[l.WARNING]:"#f39c12",[l.ERROR]:"#e74c3c"};const g=new class{constructor(){this.currentLevel=l.INFO,this.logs=[],this.maxLogs=1e3}setLevel(e){this.currentLevel=e}getLevel(){return this.currentLevel}getLogs(){return this.logs}clearLogs(){this.logs=[]}_log(e,t,...i){if(e<this.currentLevel)return;const r=(new Date).toLocaleTimeString(),d=p[e],s={timestamp:r,level:e,levelName:d,color:f[e],message:t,args:i.length>0?i:null};this.logs.push(s),this.logs.length>this.maxLogs&&(this.logs=this.logs.slice(-this.maxLogs));console[e===l.ERROR?"error":e===l.WARNING?"warn":"log"](`[${r}] [${d}] ${t}`,...i)}debug(e,...t){this._log(l.DEBUG,e,...t)}info(e,...t){this._log(l.INFO,e,...t)}warn(e,...t){this._log(l.WARNING,e,...t)}error(e,...t){this._log(l.ERROR,e,...t)}},h=(e,...t)=>g.debug(e,...t),x=(e,...t)=>g.info(e,...t),v=(e,...t)=>g.warn(e,...t),y=(e,...t)=>g.error(e,...t),R=e.createContext(null),m=()=>{const t=e.useContext(R);if(!t)throw new Error("useGame must be used within GameProvider");return t},$=({children:t})=>{const[i]=e.useState({width:2400,height:1600}),[r,d]=e.useState({x:1200,y:500,zoom:1}),[s,a]=e.useState([]),[n,o]=e.useState([]),[u,p]=e.useState([]),[f,g]=e.useState([]),[h,x]=e.useState([]),[v,y]=e.useState([]),[m,$]=e.useState([]),[w,D]=e.useState(0),[S,k]=e.useState(0),[I,_]=e.useState(5),[M,E]=e.useState(0),[b,X]=e.useState([]),[Y,A]=e.useState(0),[C,F]=e.useState(!1),[G,L]=e.useState(null),[N,O]=e.useState(1),[q,P]=e.useState(null),[T,B]=e.useState(l.INFO),[U,z]=e.useState(!1),[W,j]=e.useState({spawnRidersInterval:3e3,spawnDriversInterval:5e3,createRidesInterval:4e3,maxRiders:20,maxDrivers:15,maxActiveRides:10}),[H,J]=e.useState({search:"",status:{waiting:!0,inProgress:!0,completed:!0}}),[K,Q]=e.useState({field:"id",ascending:!0}),V=e.useCallback(e=>{d(t=>({...t,...e}))},[]),Z=e.useCallback(e=>{a(t=>[...t,e])},[]),ee=e.useCallback(e=>{o(t=>[...t,e])},[]),te=e.useCallback(e=>{p(t=>[...t,e])},[]),ie=e.useCallback((e,t)=>{a(i=>i.map(i=>i.id===e?{...i,...t}:i))},[]),re=e.useCallback((e,t)=>{o(i=>i.map(i=>i.id===e?{...i,...t}:i))},[]),de=e.useCallback((e,t)=>{p(i=>i.map(i=>i.id===e?{...i,...t}:i))},[]),se=e.useCallback(e=>{a(t=>t.filter(t=>t.id!==e))},[]),ae=e.useCallback(e=>{o(t=>t.filter(t=>t.id!==e))},[]),ne=e.useCallback(e=>{p(t=>t.filter(t=>t.id!==e))},[]),oe=e.useCallback(e=>{k(t=>t+e)},[]),ue=e.useCallback(e=>{_(e)},[]),ce=e.useCallback(e=>{X(t=>[...t,e])},[]),le=e.useCallback(e=>{A(t=>t+e)},[]),pe=e.useCallback(()=>{a([]),o([]),p([]),k(0),_(5),E(0),X([]),A(0)},[]);e.useEffect(()=>{const e=setInterval(()=>{D(e=>e+1)},1e3);return()=>clearInterval(e)},[]);const fe={worldSize:i,camera:r,drivers:s,riders:n,rideRequests:u,buildings:f,roads:h,streetNames:v,landmarks:m,gameTime:w,earnings:S,rating:I,activeRides:M,completedRides:b,totalDriverDistance:Y,ridesPanelHidden:C,selectedUnit:G,simulationSpeed:N,ridesFilter:H,ridesSort:K,selectedRideId:q,logLevel:T,isAutonomousMode:U,autoSimulationConfig:W,updateCamera:V,addDriver:Z,addRider:ee,addRideRequest:te,updateDriver:ie,updateRider:re,updateRideRequest:de,removeDriver:se,removeRider:ae,removeRideRequest:ne,addEarnings:oe,updateRating:ue,addCompletedRide:ce,addDriverDistance:le,cleanMap:pe,setRidesPanelHidden:F,setSelectedUnit:L,setSimulationSpeed:O,setIsAutonomousMode:z,setAutoSimulationConfig:j,setRidesFilter:J,setRidesSort:Q,setSelectedRideId:P,setLogLevel:B,setBuildings:g,setRoads:x,setStreetNames:y,setLandmarks:$,setActiveRides:E};return c.jsx(R.Provider,{value:fe,children:t})},w=()=>{const[t,i]=e.useState(!1),[r,d]=e.useState(!1),[s,a]=e.useState(60),n=e.useCallback(()=>{const e=navigator.userAgent,t=/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e),i=window.innerWidth<=768||window.innerHeight<=768,r="ontouchstart"in window||navigator.maxTouchPoints>0;return t||i&&r},[]),o=e.useCallback(()=>{const e=navigator.hardwareConcurrency||2,t=navigator.deviceMemory||4;return e<4||t<4},[]),u=e.useCallback(()=>{const e=n(),t=o();return e||t?30:60},[n,o]);return e.useEffect(()=>{const e=n(),t=o(),r=u();i(e),d(t),a(r),console.log(`üì± Device Detection: Mobile=${e}, LowEnd=${t}, TargetFPS=${r}`)},[n,o,u]),e.useEffect(()=>{const e=()=>{const e=u();a(e)};return window.addEventListener("orientationchange",e),window.addEventListener("resize",e),()=>{window.removeEventListener("orientationchange",e),window.removeEventListener("resize",e)}},[u]),{isMobile:t,isLowEndDevice:r,optimalFrameRate:s,isOptimized:t||r}},D=Array.from({length:14},(e,t)=>84+100*t+16),S=Array.from({length:16},(e,t)=>100+140*t+16);function k(e,t){let i=S[0],r=D[0],d=Math.abs(e-i),s=Math.abs(t-r);for(const a of S){const t=Math.abs(e-a);t<d&&(d=t,i=a)}for(const a of D){const e=Math.abs(t-a);e<s&&(s=e,r=a)}return{x:i,y:r}}function I(e,t,i,r){return Math.abs(e-i)+Math.abs(t-r)}function _(e,t){const i=[],{gridX:r,gridY:d}=function(e,t){return{gridX:S.indexOf(e),gridY:D.indexOf(t)}}(e,t);return d>0&&i.push({x:e,y:D[d-1]}),d<D.length-1&&i.push({x:e,y:D[d+1]}),r>0&&i.push({x:S[r-1],y:t}),r<S.length-1&&i.push({x:S[r+1],y:t}),i}function M(e,t){const i=k(e.x,e.y),r=k(t.x,t.y);if(h(`üîç Pathfinding from (${e.x.toFixed(0)}, ${e.y.toFixed(0)}) to (${t.x.toFixed(0)}, ${t.y.toFixed(0)})`),h(`üìç Start intersection: (${i.x}, ${i.y}), Goal intersection: (${r.x}, ${r.y})`),i.x===r.x&&i.y===r.y)return h("‚úÖ Start and goal are the same intersection"),[i,r];const d=[i],s=new Map,a=new Map,n=new Map,o=new Set,u=(e,t)=>`${e},${t}`;a.set(u(i.x,i.y),0),n.set(u(i.x,i.y),I(i.x,i.y,r.x,r.y));let c=0;const l=1e3;for(;d.length>0&&c<l;){c++;let e=d[0],t=0;for(let r=1;r<d.length;r++){const i=n.get(u(e.x,e.y))||1/0;(n.get(u(d[r].x,d[r].y))||1/0)<i&&(e=d[r],t=r)}if(e.x===r.x&&e.y===r.y){const t=[e];let i=e;for(;s.has(u(i.x,i.y));)i=s.get(u(i.x,i.y)),t.unshift(i);return t}d.splice(t,1),o.add(u(e.x,e.y));const i=_(e.x,e.y);h(`üîé Current: (${e.x}, ${e.y}), Neighbors: ${i.length}, OpenSet size: ${d.length}`);for(const c of i){if(o.has(u(c.x,c.y))){h(`   ‚è≠Ô∏è Skipping closed neighbor: (${c.x}, ${c.y})`);continue}const t=a.get(u(e.x,e.y));if(void 0===t){y(`‚ùå ERROR: No gScore for current node (${e.x}, ${e.y})!`);continue}const i=t+I(e.x,e.y,c.x,c.y),l=a.get(u(c.x,c.y));h(`   üîç Neighbor (${c.x}, ${c.y}): tentativeG=${i.toFixed(0)}, currentG=${l||"undefined"}`),i<(l||1/0)&&(s.set(u(c.x,c.y),e),a.set(u(c.x,c.y),i),n.set(u(c.x,c.y),i+I(c.x,c.y,r.x,r.y)),d.some(e=>e.x===c.x&&e.y===c.y)?h(`   ‚ÑπÔ∏è Already in openSet: (${c.x}, ${c.y})`):(d.push(c),h(`   ‚úÖ Added to openSet: (${c.x}, ${c.y})`)))}h(`üìä End of iteration: OpenSet size = ${d.length}`)}return c>=l?y("‚ùå Pathfinding hit iteration limit (1000), using direct route"):v("‚ö†Ô∏è No path found, using direct route"),[i,r]}const E=()=>{const{drivers:t,riders:i,rideRequests:r,simulationSpeed:d,logLevel:s,updateDriver:a,updateRider:n,updateRideRequest:o,removeRideRequest:u,addEarnings:c,setActiveRides:l,addCompletedRide:p,addDriverDistance:f}=m(),{optimalFrameRate:y,isMobile:R}=w(),$=e.useRef(null),D=e.useRef({drivers:[],riders:[],rideRequests:[]}),S=e.useRef({}),k=e.useRef(1),I=e.useRef(0),_=e.useRef(1e3/60);D.current={drivers:t,riders:i,rideRequests:r},k.current=d,S.current={updateDriver:a,updateRider:n,updateRideRequest:o,removeRideRequest:u,addEarnings:c,setActiveRides:l,addCompletedRide:p,addDriverDistance:f},e.useEffect(()=>{g.setLevel(s)},[s]),e.useEffect(()=>{_.current=1e3/y,x(`üéÆ Game loop frame rate set to ${y} FPS (Mobile: ${R})`)},[y,R]);const E=(e,t,i,r)=>{const d=t.filter(e=>!e.assignedDriver&&"waiting_for_pickup"===e.status),s=new Set;d.forEach(t=>{const d=e.filter(e=>"idle"===e.status&&e.type===t.type&&!s.has(e.id));if(d.length>0){let e=null,a=1/0;if(d.forEach(i=>{const r=Math.sqrt(Math.pow(i.x-t.pickupX,2)+Math.pow(i.y-t.pickupY,2));r<a&&(a=r,e=i)}),e){s.add(e.id),r(t.id,{assignedDriver:e,status:"going_to_rider"}),i(e.id,{status:"going_to_rider",targetX:t.pickupX,targetY:t.pickupY,path:void 0,pathIndex:void 0});const d="air"===t.type?"‚úàÔ∏è":"üöó",a="air"===t.type?"Pilot":"Driver";x(`${d} Auto-assigned ${a} #${e.id} to waiting ${t.type} ride #${t.id}`)}}})};e.useEffect(()=>{x("üéÆ Game Loop STARTED");let e=Date.now(),t=0;const i=r=>{if(r-I.current<_.current)return void($.current=requestAnimationFrame(i));I.current=r;const d=Date.now(),s=(d-e)/1e3*k.current;e=d,t++,t%60==0&&h(`üéÆ Game Loop running... Frame ${t}, Drivers: ${D.current.drivers.length}, Speed: ${k.current.toFixed(2)}x`);const{drivers:a,riders:n,rideRequests:o}=D.current,{updateDriver:u,updateRider:c,updateRideRequest:l,removeRideRequest:p,addEarnings:f,setActiveRides:g,addCompletedRide:y,addDriverDistance:R}=S.current;a.forEach(e=>{if("going_to_rider"===e.status&&void 0!==e.targetX)if("ground"===e.type){if(!e.path||0===e.path.length||void 0===e.pathIndex){try{const t=M({x:e.x,y:e.y},{x:e.targetX,y:e.targetY});t&&t.length>0?(h(`üó∫Ô∏è Ground Driver #${e.id}: Initializing path to pickup with ${t.length} waypoints`),u(e.id,{path:t,pathIndex:0})):(v(`‚ö†Ô∏è Ground Driver #${e.id}: Failed to find path to pickup, switching to direct movement`),u(e.id,{path:[{x:e.targetX,y:e.targetY}],pathIndex:0}))}catch(i){i(`‚ùå Ground Driver #${e.id}: Pathfinding error: ${i.message}`),u(e.id,{path:[{x:e.targetX,y:e.targetY}],pathIndex:0})}return}const t=e.path[e.pathIndex];if(!t){const t=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(t&&"going_to_rider"===t.status){let r;x(`‚úÖ Ground Driver #${e.id} picked up rider for ride #${t.id}`);try{r=M({x:t.pickupX,y:t.pickupY},{x:t.dropoffX,y:t.dropoffY}),r&&0!==r.length||(v(`‚ö†Ô∏è Ground Driver #${e.id}: Failed to find dropoff path, using direct route`),r=[{x:t.dropoffX,y:t.dropoffY}])}catch(i){i(`‚ùå Ground Driver #${e.id}: Dropoff pathfinding error: ${i.message}`),r=[{x:t.dropoffX,y:t.dropoffY}]}u(e.id,{status:"on_ride",targetX:t.dropoffX,targetY:t.dropoffY,x:t.pickupX,y:t.pickupY,path:r,pathIndex:0}),l(t.id,{status:"in_ride"});const d=n.find(e=>e.id===t.riderId);d&&c(d.id,{status:"in_ride",x:t.pickupX,y:t.pickupY})}return}const r=t.x-e.x,d=t.y-e.y,a=Math.sqrt(r*r+d*d);if(a<10)u(e.id,{pathIndex:e.pathIndex+1});else{const t=(e.speed||100)*s,i=Math.min(t/a,1);u(e.id,{x:e.x+r*i,y:e.y+d*i})}}else{const i=e.targetX-e.x,r=e.targetY-e.y,d=Math.sqrt(i*i+r*r);if(t%60==0&&d<200&&h(`Air Pilot #${e.id}: going_to_rider, distance=${d.toFixed(0)}px`),d<20){const t=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(t&&"going_to_rider"===t.status){x(`‚úÖ Air Pilot #${e.id} picked up rider for ride #${t.id}`),u(e.id,{status:"on_ride",targetX:t.dropoffX,targetY:t.dropoffY,x:t.pickupX,y:t.pickupY}),l(t.id,{status:"in_ride"});const i=n.find(e=>e.id===t.riderId);i&&c(i.id,{status:"in_ride",x:t.pickupX,y:t.pickupY})}}else{const t=(e.speed||200)*s,a=Math.min(t/d,1),n=e.x+i*a,o=e.y+r*a,c=Math.sqrt(Math.pow(n-e.x,2)+Math.pow(o-e.y,2));R(c),u(e.id,{x:n,y:o})}}else if("on_ride"===e.status&&void 0!==e.targetX)if("ground"===e.type){if(!e.path||0===e.path.length||void 0===e.pathIndex){const t=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(t)try{const i=M({x:e.x,y:e.y},{x:t.dropoffX,y:t.dropoffY});i&&i.length>0?(h(`üó∫Ô∏è Ground Driver #${e.id}: Recalculating path to dropoff with ${i.length} waypoints`),u(e.id,{path:i,pathIndex:0})):(v(`‚ö†Ô∏è Ground Driver #${e.id}: Failed to recalculate dropoff path, using direct route`),u(e.id,{path:[{x:t.dropoffX,y:t.dropoffY}],pathIndex:0}))}catch(i){i(`‚ùå Ground Driver #${e.id}: Dropoff pathfinding error: ${i.message}`),u(e.id,{path:[{x:t.dropoffX,y:t.dropoffY}],pathIndex:0})}return}const t=e.path[e.pathIndex];if(!t){const t=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(t&&"in_ride"===t.status){x(`üí∞ Ground Ride #${t.id} completed! Earned $${t.fare}`);const i=Math.round((Date.now()-t.createdAt)/1e3),r=Math.sqrt(Math.pow(t.dropoffX-t.pickupX,2)+Math.pow(t.dropoffY-t.pickupY,2));y({id:t.id,type:t.type,duration:i,distance:r,fare:t.fare}),f(t.fare),u(e.id,{status:"idle",targetX:void 0,targetY:void 0,x:t.dropoffX,y:t.dropoffY,path:void 0,pathIndex:void 0});const d=n.find(e=>e.id===t.riderId);d&&c(d.id,{status:"idle",x:t.dropoffX,y:t.dropoffY}),p(t.id),E(a,o,u,l)}return}const r=t.x-e.x,d=t.y-e.y,g=Math.sqrt(r*r+d*d);if(g<10)u(e.id,{pathIndex:e.pathIndex+1});else{const t=(e.speed||100)*s,i=Math.min(t/g,1),a=e.x+r*i,l=e.y+d*i,p=Math.sqrt(Math.pow(a-e.x,2)+Math.pow(l-e.y,2));R(p),u(e.id,{x:a,y:l});const f=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(f){const e=n.find(e=>e.id===f.riderId);e&&"in_ride"===e.status&&c(e.id,{x:a,y:l})}}}else{const i=e.targetX-e.x,r=e.targetY-e.y,d=Math.sqrt(i*i+r*r);if(t%60==0&&h(`Air Pilot #${e.id}: on_ride, distance=${d.toFixed(0)}px to dropoff`),d<20){const t=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(t&&"in_ride"===t.status){x(`üí∞ Air Ride #${t.id} completed! Earned $${t.fare}`);const i=Math.round((Date.now()-t.createdAt)/1e3),r=Math.sqrt(Math.pow(t.dropoffX-t.pickupX,2)+Math.pow(t.dropoffY-t.pickupY,2));y({id:t.id,type:t.type,duration:i,distance:r,fare:t.fare}),f(t.fare),u(e.id,{status:"idle",targetX:void 0,targetY:void 0,x:t.dropoffX,y:t.dropoffY});const d=n.find(e=>e.id===t.riderId);d&&c(d.id,{status:"idle",x:t.dropoffX,y:t.dropoffY}),p(t.id),E(a,o,u,l)}}else{const t=(e.speed||200)*s,a=Math.min(t/d,1),l=e.x+i*a,p=e.y+r*a,f=Math.sqrt(Math.pow(l-e.x,2)+Math.pow(p-e.y,2));R(f),u(e.id,{x:l,y:p});const g=o.find(t=>{var i;return(null==(i=t.assignedDriver)?void 0:i.id)===e.id});if(g){const e=n.find(e=>e.id===g.riderId);e&&"in_ride"===e.status&&c(e.id,{x:l,y:p})}}}});if(g(o.filter(e=>e.assignedDriver).length),t%60==0){E(a,o,u,l);const e=Date.now(),t=o.filter(t=>e-t.createdAt>3e4&&("going_to_rider"===t.status||"in_ride"===t.status));t.length>0&&(v(`‚ö†Ô∏è Found ${t.length} stuck rides, cleaning them up`),t.forEach(e=>{e.assignedDriver&&u(e.assignedDriver.id,{status:"idle",targetX:void 0,targetY:void 0,path:void 0,pathIndex:void 0});const t=n.find(t=>t.id===e.riderId);t&&c(t.id,{status:"idle"}),p(e.id),v(`üßπ Cleaned up stuck ride #${e.id}`)}))}$.current=requestAnimationFrame(i)};return $.current=requestAnimationFrame(i),()=>{x("üéÆ Game Loop STOPPED"),$.current&&cancelAnimationFrame($.current)}},[])};export{$ as G,f as L,l as a,w as b,E as c,x as i,c as j,m as u,v as w};
